@model IEnumerable<CartItem>

    <head>
    <script>
        function updateCart(articleId, quantityChange, price) {
           
            var currentQuantityElement = document.getElementById('quantity-' + articleId);
            var currentQuantity = parseInt(currentQuantityElement.innerText);

            var newQuantity = currentQuantity + quantityChange;

            if (newQuantity == 0 || quantityChange == 0) {
                setCookie('article' + articleId, 0, -1);
                currentQuantityElement.parentElement.remove(); 
            } else {
                setCookie('article' + articleId, newQuantity, 7);
                currentQuantityElement.innerText = newQuantity;
            }

            var totalCostElement = document.getElementById('totalCost');
            var totalCost = parseFloat(totalCostElement.innerText.replace('Total Cost: ', ''));

            if(quantityChange==0){
                quantityChange = -currentQuantity;
            }
            totalCost += quantityChange * price;
            totalCostElement.innerText = 'Total Cost: ' + totalCost.toFixed(2); 
            

        }
        function setCookie(name, value, days) {
            var expires = '';
            if (days) {
                var date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                expires = '; expires=' + date.toUTCString();
            }
            document.cookie = name + '=' + value + expires + '; path=/';
        }
    </script>
    </head>

<h1>Shopping Cart</h1>


        @if (Model.Count() == 0)
        {
            <p>
                Your cart is empty
            </p>
        }
        else{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ImagePath)
                </th>
                <th>
                     @Html.DisplayNameFor(model => model.Category)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>

            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @if (!string.IsNullOrEmpty(item.ImagePath))
                    {
                        <img src="@Url.Content(item.ImagePath)" alt="Image" class="thumbnail" />
                    }
                    else
                    {
                        <img src="~/images/placeholder.jpg" alt="Placeholder" class="thumbnail" />
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td id="quantity-@item.ArticleId">
                    @item.Quantity
                </td>
                
                <td>
                    <a asp-action="UpdateCart" asp-controller="Shop" asp-route-articleId="@item.ArticleId" asp-route-quantityChange="1">+</a> |
                    <a asp-action="UpdateCart" asp-controller="Shop" asp-route-articleId="@item.ArticleId" asp-route-quantityChange="-1">-</a> |
                    <a asp-action="UpdateCart" asp-controller="Shop" asp-route-articleId="@item.ArticleId" asp-route-quantityChange="0">Remove</a>
                </td>

                <!--     <td>
                        <a href="#" onclick="updateCart('@item.ArticleId', 1, @item.Price)">+</a> |
                        <a href="#" onclick="updateCart('@item.ArticleId', -1, @item.Price)">-</a> |
                        <a href="#" onclick="updateCart('@item.ArticleId', 0, @item.Price)">Remove</a>
                    </td>>
                -->
            </tr>
        }
        
    </tbody>
</table>
<p id='totalCost'>Total Cost: @Model.Sum(item => item.Price * item.Quantity)</p>
    
        <form method="post" asp-action="ConfirmOrder" asp-controller="Shop">
            <button type="submit">Confirm order</button>
        </form>
    
}
